{"version":3,"sources":["angular-popover.js"],"names":["app","angular","module","directive","$window","restrict","transclude","scope","template","link","element","attrs","elementPositionProperty","getComputedStyle","position","style","popover_container","querySelector","popover","parent_height","parent_width","popover_height","popover_width","triangle","triangle_height","triangle_diagonal","triangle_div_side","triangle_rect_div_side","Math","sqrt","mode","closeOnClick","undefined","closeOnMouseleave","createPopover","templateElement","innerHTML","backgroundColor","textColor","color","padding","clientHeight","clientWidth","direction","top","left","right","getContentPopover","templateUrl","isTemplateUrl","getTriangleClass","addEventListener","classList","add","toggle","remove","contains"],"mappings":"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","file":"angular-popover.js","sourcesContent":["var app = angular.module('angular-popover', []);\napp.directive('angularPopover', ['$window', function ($window) {\n  return {\n    restrict: 'A',\n    transclude: true,\n    scope: true,\n    template: '<div class=\"angular-popover-container\"><div class=\"angular-popover hide-popover-element\"><div ng-if=\"isTemplateUrl()\" ng-include=\"getContentPopover()\" class=\"angular-popover-template\"></div><div ng-if=\"!isTemplateUrl()\" class=\"angular-popover-template\"></div></div><div class=\"angular-popover-triangle hide-popover-element\" ng-class=\"getTriangleClass()\"></div></div><ng-transclude></ng-transclude>',\n    link: function (scope, element, attrs) {\n\n      var elementPositionProperty = $window.getComputedStyle(element[0]).position;\n      if (elementPositionProperty === 'static') {\n        element[0].style.position = 'relative';\n      }\n\n      //the root div of the popup template\n      var popover_container = element[0].querySelector('.angular-popover-container'),\n        popover, //the popover element\n        parent_height, //height of the element to which the directive is attached\n        parent_width, //width of the element to which the directive is attached\n        popover_height, //height of the popover\n        popover_width, //width of the popover\n        triangle, //the small triangle attached with the popover\n        triangle_height, //vertical height of the triangle\n        triangle_diagonal, //base of the triangle\n        triangle_div_side = 15, //side of the triangle\n        triangle_rect_div_side = 30; //the div which has been rotated to make a triangle using the after pseudo class\n\n      triangle_height = Math.sqrt(triangle_div_side * triangle_div_side / 2);\n      triangle_diagonal = Math.sqrt(triangle_div_side * triangle_div_side * 2);\n      var mode = attrs.mode || 'click';\n      var closeOnClick = attrs.closeOnClick === undefined ? mode === 'click' : (attrs.closeOnClick === 'true');\n\n      var closeOnMouseleave = attrs.closeOnMouseleave === undefined ? mode === 'mouseover' : (attrs.closeOnMouseleave === 'true');\n\n      var createPopover = function () {\n        //if the template is supplied instead of templateUrl, set the popover innerHTML to the string passed in the 'template' attribute\n        if (attrs.template) {\n          var templateElement = element[0].querySelector('.angular-popover-template');\n          templateElement.innerHTML = attrs.template;\n        }\n\n        if (attrs.backgroundColor) {\n          popover.style['background-color'] = attrs.backgroundColor;\n        }\n\n        if (attrs.textColor) {\n          popover.style.color = attrs.textColor;\n        }\n\n        if (attrs.padding) {\n          popover.style.padding = attrs.padding;\n        }\n\n        popover_height = popover.clientHeight;\n        popover_width = popover.clientWidth;\n\n        //check direction and calculate position for appending popover and triangle\n        switch (attrs.direction) {\n          case 'top':\n            popover.style.top = (-parent_height - popover_height - triangle_height) + 'px';\n            popover.style.left = ((parent_width - popover_width) / 2) + 'px';\n            triangle.style.top = (-parent_height - triangle_height) + 'px';\n            triangle.style.left = ((parent_width - triangle_rect_div_side) / 2) + 'px';\n            break;\n\n          case 'bottom':\n            popover.style.top = triangle_height + 'px';\n            popover.style.left = ((parent_width - popover_width) / 2) + 'px';\n            triangle.style.top = -(triangle_rect_div_side - triangle_height) + 'px';\n            triangle.style.left = ((parent_width - triangle_rect_div_side) / 2) + 'px';\n            break;\n\n          case 'right':\n            popover.style.top = ((parent_height - popover_height) / 2 - parent_height) + 'px';\n            popover.style.left = parent_width + triangle_height + 'px';\n            triangle.style.top = ((parent_height - triangle_rect_div_side) / 2 - parent_height) + 'px';\n            triangle.style.left = (parent_width - (triangle_rect_div_side - triangle_height)) + 'px';\n            break;\n\n          case 'left':\n            popover.style.top = ((parent_height - popover_height) / 2 - parent_height) + 'px';\n            popover.style.right = triangle_height + 'px';\n            triangle.style.top = ((parent_height - triangle_rect_div_side) / 2 - parent_height) + 'px';\n            triangle.style.left = -triangle_height + 'px';\n            break;\n        }\n      };\n\n      //return the path of the popover template\n      scope.getContentPopover = function () {\n        return attrs.templateUrl;\n      };\n\n      scope.isTemplateUrl = function () {\n        if (attrs.templateUrl) {\n          return true;\n        }\n        return false;\n      };\n\n      //depending upon the direction specified, attached the appropriate class to the popover \n      scope.getTriangleClass = function () {\n        return 'angular-popover-triangle-' + attrs.direction;\n      };\n\n\n      if (closeOnMouseleave) {\n        element[0].addEventListener('mouseleave', function () {\n          if (popover) {\n            popover.classList.add('hide-popover-element');\n            triangle.classList.add('hide-popover-element');\n          }\n        });\n      }\n\n      if (mode !== 'click' && closeOnClick) {\n        element[0].addEventListener('click', function () {\n          if (popover) {\n            popover.classList.add('hide-popover-element');\n            triangle.classList.add('hide-popover-element');\n          }\n        });\n      }\n\n      //listen for click on the directive element\n      element[0].addEventListener(mode, function () {\n        parent_height = element[0].clientHeight;\n\n        //move the popover container to the bottom of the directive element\n        popover_container.style.top = parent_height + 'px';\n        parent_width = element[0].clientWidth;\n        popover = element[0].querySelector('.angular-popover');\n        triangle = element[0].querySelector('.angular-popover-triangle');\n\n        if (mode === 'click' && closeOnClick) {\n          popover.classList.toggle('hide-popover-element');\n          triangle.classList.toggle('hide-popover-element');\n          popover_container.classList.toggle('popover-animation');\n          popover_container.classList.toggle('popover-floating-animation-' + attrs.direction);\n        } else if (mode === 'click' && !closeOnClick) {\n          popover.classList.remove('hide-popover-element');\n          triangle.classList.remove('hide-popover-element');\n          popover_container.classList.add('popover-animation');\n          popover_container.classList.add('popover-floating-animation-' + attrs.direction);\n        }\n\n        //'mouseover' mode\n        else if (popover.classList.contains('hide-popover-element')) {\n          popover.classList.remove('hide-popover-element');\n          triangle.classList.remove('hide-popover-element');\n          popover_container.classList.add('popover-animation');\n          popover_container.classList.add('popover-floating-animation-' + attrs.direction);\n        }\n\n        if (!popover.classList.contains('hide-popover-element')) {\n          createPopover();\n        }\n      });\n\n\n    }\n  };\n}]);"],"sourceRoot":"dist"}